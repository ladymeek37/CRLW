name: CI/CD

on: 
  push: 
  workflow_dispatch:


jobs:

  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
      - uses: actions/checkout@v4
      - name: check for devops repo file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            compose:
              - 'docker-compose.yaml'
          list-files: shell
  
  frontend:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.frontend == 'true' }}
    name: build and deploy frontend application
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/crlw-frontend-do
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/frontend:buildcache,mode=max


      - name: Checkout devops
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          repository: "ladymeek37/devops


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.crlw-app-frontend.image = "${{ steps.meta.outputs.tags }}"' './devops/docker-compose.yaml'


      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: ladymeek37
          commit_user_email: ladyjmeek@gmail.com 
          commit_author: ladymeek37 <ladyjmeek@gmail.com>
            

      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops
            git reset --hard
            git pull
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate --no-deps crlw-app-frontend

  backend:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.backend == 'true' }}
    name: build and deploy backend application
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/crlw-backend-do
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/backend:buildcache,mode=max
      
      - name: Checkout devops
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          repository: "ladymeek37/devops"


      -
        name: update docker-compose image value
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.services.crlw-app-backend.image = "${{ steps.meta.outputs.tags }}"' './devops/docker-compose.yaml'


      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: ladymeek37
          commit_user_email: ladyjmeek@gmail.com 
          commit_author: ladymeek37 <ladyjmeek@gmail.com>


      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops
            git reset --hard
            git pull
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d --force-recreate --no-deps crlw-app-backend

  compose:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.compose == 'true' }}
    name: apply docker compose changes
    runs-on: ubuntu-latest
    steps:
      - 
        name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIV_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/devops
            git reset --hard
            git pull
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose up -d
